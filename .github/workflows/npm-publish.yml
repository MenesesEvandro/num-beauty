name: Publish to npm

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'
      - '!.github/workflows/npm-publish.yml'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessário para o version-check funcionar corretamente

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Versão mais estável do Node
          registry-url: 'https://registry.npmjs.org/'
          cache: 'npm'

      # Adicionar diagnóstico para problemas de instalação
      - name: Debug npm config
        run: |
          npm config list
          npm cache verify
          
      # --legacy-peer-deps para resolver problemas de compatibilidade
      - name: Install dependencies
        run: npm ci --legacy-peer-deps || npm install --legacy-peer-deps
        
      - name: Lint code
        run: npm run lint
        
      - name: Run tests
        run: npm test
        
      - name: Build for production
        run: npm run build:prod
        
      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          file-name: package.json
          
      - name: Publish to npm
        if: steps.check.outputs.changed == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create git tag
        if: steps.check.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          export VERSION=$(node -p "require('./package.json').version")
          git tag -a v$VERSION -m "Release v$VERSION"
          git push origin v$VERSION
